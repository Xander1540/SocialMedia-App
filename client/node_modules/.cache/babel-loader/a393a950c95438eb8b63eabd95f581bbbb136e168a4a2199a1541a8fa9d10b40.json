{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\SocialMediaApp\\\\client\\\\src\\\\Pages\\\\Post.js\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    }); // eslint-disable-next-line\n  }, []);\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.console.error) {\n        //alert(response.data.error);\n        console.log('');\n      } else {\n        const commentToAdd = {\n          commentBody: newComment\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: postObject.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postText\",\n        children: postObject.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: postObject.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comments...\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [\" \", comment.commentBody]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"tp9ynM+c+sGQ5Jb8zI2V3t22ecs=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Post","_s","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","get","then","response","data","addComment","post","commentBody","PostId","headers","accessToken","sessionStorage","getItem","console","error","log","commentToAdd","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","username","type","placeholder","value","onChange","event","target","onClick","map","comment","key","_c","$RefreshReg$"],"sources":["C:/Projects/SocialMediaApp/client/src/Pages/Post.js"],"sourcesContent":[" // eslint-disable-next-line\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nfunction Post() {\r\n    let {id} = useParams();\r\n    const [postObject, setPostObject] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment]= useState(\"\")\r\n\r\nuseEffect(()=>{\r\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response)=>{\r\n      setPostObject(response.data);  \r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response)=>{\r\n      setComments(response.data);  \r\n    });// eslint-disable-next-line\r\n}, []);\r\n\r\n  const addComment=()=>{\r\n    axios\r\n    .post(\"http://localhost:3001/comments\", {\r\n      commentBody: newComment, \r\n        PostId: id,\r\n      },\r\n      {\r\n        headers:{\r\n          accessToken: sessionStorage.getItem(\"accessToken\"),\r\n        }\r\n      })\r\n    .then((response)=>{\r\n      if (response.data.console.error){\r\n        //alert(response.data.error);\r\n        console.log('')\r\n    } else{\r\n      const commentToAdd= {commentBody: newComment}\r\n      setComments([...comments, commentToAdd])\r\n      setNewComment(\"\");\r\n    }\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='postPage'>\r\n      <div className='leftSide'>\r\n        <div className='title'>{postObject.title}</div>\r\n        <div className='postText'>{postObject.postText}</div>\r\n        <div className='footer'>{postObject.username}</div>\r\n      </div>\r\n      <div className='rightSide'>\r\n        <div className='addCommentContainer'>\r\n          <input type=\"text\" placeholder='Comments...' value={newComment} onChange={(event)=>{setNewComment(event.target.value)}}></input>\r\n          <button onClick={addComment}>Add Comment</button>\r\n        </div>\r\n        <div className='listOfComments'>\r\n          {comments.map((comment,key)=>{\r\n            return <div key={key} className='comment'> {comment.commentBody}</div>\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}